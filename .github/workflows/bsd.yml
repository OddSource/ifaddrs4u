#
# Copyright Â© 2010-2023 OddSource Code (license@oddsource.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "Matrix CI - BSD VMs"

on:
  #pull_request:
  #push:
  #schedule:
  #  - cron: "0 1 * * SUN"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    permissions:
      actions: read  # for github/codeql-action/init to get workflow details
      contents: read  # for actions/checkout to fetch code
      security-events: write  # for github/codeql-action/analyze to upload SARIF results
    strategy:
      fail-fast: false
      matrix:
        os_name: [freebsd, netbsd]
        java: ["11", "17", "21"]
        include:
          - java: "11"
            python: "3.8"
          - java: "17"
            python: "3.10"
          - java: "21"
            python: "3.12"
          - os_name: freebsd
            os_version: "12.4"
          - os_name: netbsd
            os_version: "9.3"
    runs-on: macos-latest
    name: "${{ matrix.os_name }} / Java ${{ matrix.java }} / Python ${{ matrix.python }}"
    steps:
      - name: Checkout ifaddrs4u
        uses: actions/checkout@v4

      - name: Execute on ${{ matrix.os.name }} Virtual Machine
        uses: cross-platform-actions/action@v0.21.0
        env:
          ASSUME_ALWAYS_YES: "TRUE"
        with:
          environment_variables: ASSUME_ALWAYS_YES
          operating_system: ${{ matrix.os_name }}
          version: ${{ matrix.os_version }}
          run: |
               uname -a
               echo $SHELL
               pwd
               echo "#######################################"
               echo "# INSTALLING PREREQUISITES            #"
               echo "#######################################"
               sudo pkg install -y cmake python${{ matrix.python }} openjdk${{ matrix.java }}
               echo
               echo "#######################################"
               echo "# STEP: CMake Prepare                 #"
               echo "#######################################"
               cd ipaddrs4cpp
               cmake -DCMAKE_BUILD_TYPE=Release -S . -B ./cmake-external-build
               cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_TESTS:BOOL=ON -S . -B ./cmake-debug-test-build
               echo
               echo "#######################################"
               echo "# STEP: Compile ipaddrs4cpp Debug     #"
               echo "#######################################"
               cmake --build ./cmake-debug-test-build --config Debug -j 14
               echo
               echo "#######################################"
               echo "# STEP: Run ifaddrs4cpp Tests         #"
               echo "#######################################"
               ./cmake-debug-test-build/ifaddrs4cpp_tests
               echo
               echo "#######################################"
               echo "# STEP: Compile ifaddrs4cpp Release   #"
               echo "#######################################"
               cmake --build ./cmake-external-build --config Release -j 14
               echo
