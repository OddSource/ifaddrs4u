#
# Copyright Â© 2010-2023 OddSource Code (license@oddsource.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "Matrix CI - GH Runners"

on:
  pull_request:
  push:
  schedule:
    - cron: "0 1 * * SUN"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    permissions:
      actions: read  # for github/codeql-action/init to get workflow details
      contents: read  # for actions/checkout to fetch code
      security-events: write  # for github/codeql-action/analyze to upload SARIF results
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-13, ubuntu-20.04, windows-2019, windows-2022]
        java: ["11", "17", "21"]
        include:
          - java: "11"
            python: "3.8"
          - java: "17"
            python: "3.10"
          - java: "21"
            python: "3.12"
          - os: windows-2019
            set_e: '$ErrorActionPreference = "Stop"'  # default pwsh does not fail when commands fail, neither does cmd
            cpp_test_command: cmake-debug-test-build\Debug\ifaddrs4cpp_tests.exe
            echo_java_info_cmd: 'echo "java = $((get-command java).Path)`njavac = $((get-command javac).Path)`nJAVA_HOME = $env:JAVA_HOME"'
            ls_java_cmd: 'Get-ChildItem -Force "$env:JAVA_HOME'
          - os: windows-2022
            set_e: '$ErrorActionPreference = "Stop"'  # default pwsh does not fail when commands fail, neither does cmd
            cpp_test_command: cmake-debug-test-build\Debug\ifaddrs4cpp_tests.exe
            echo_java_info_cmd: 'echo "java = $((get-command java).Path)`njavac = $((get-command javac).Path)`nJAVA_HOME = $env:JAVA_HOME"'
            ls_java_cmd: 'Get-ChildItem -Force "$env:JAVA_HOME'
    runs-on: ${{ matrix.os }}
    name: "${{ matrix.os }} / Java ${{ matrix.java }} / Python ${{ matrix.python }}"
    steps:
      - name: Checkout ifaddrs4u
        uses: actions/checkout@v4

      - name: Installing CMake
        uses: lukka/get-cmake@latest

      - name: CMake Prepare
        working-directory: ifaddrs4cpp
        run: |
             ${{ matrix.set_e || 'echo [using Bash]' }}
             cmake -DCMAKE_BUILD_TYPE=Release -S . -B ./cmake-external-build
             cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_TESTS:BOOL=ON -S . -B ./cmake-debug-test-build

      - name: Compile ifaddrs4cpp Debug
        working-directory: ifaddrs4cpp
        run: cmake --build ./cmake-debug-test-build --config Debug -j 14

      - name: Run ifaddrs4cpp Tests
        working-directory: ifaddrs4cpp
        run: ctest --build-config Debug --verbose --test-action Test --output-on-failure

#      - name: Compile ifaddrs4cpp Release
#        working-directory: ifaddrs4cpp
#        run: cmake --build ./cmake-external-build --config Release -j 14

      - name: Installing Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "${{ matrix.java }}"
          java-package: "jdk"
          cache: "maven"

      - name: Installing Maven 3.9.5
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.5

#             ${{ matrix.ls_java_cmd || 'ls -al "$JAVA_HOME' }}/lib"
#             ${{ matrix.ls_java_cmd || 'ls -al "$JAVA_HOME' }}/include"
#             ${{ matrix.ls_java_cmd || 'ls -al "$JAVA_HOME' }}/bin"
      - name: Build ifaddrs4j with Maven
        working-directory: ifaddrs4j
        run: |
             ${{ matrix.set_e || 'echo [using Bash]' }}
             ${{ matrix.echo_java_info_cmd || 'echo -e "java = $(which java)\njavac = $(which javac)\nJAVA_HOME = $JAVA_HOME"' }}
             mvn -B --version
             mvn -B '-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn' help:active-profiles install

      - name: Installing Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"
          cache: "pip" # caching pip dependencies

      - name: Building ifaddrs4py with Pip
        working-directory: ifaddrs4py
        run: |
             ${{ matrix.set_e || 'echo [using Bash]' }}
             pip --version
             echo '+ pip install --config-setting="--build-option=--clean" --config-setting="--build-option=--test-cpp" --verbose .[test]'
             pip install --config-setting="--build-option=--clean" --config-setting="--build-option=--test-cpp" --verbose .[test]
             echo "+ pytest --verbose -s"
             pytest --verbose -s
             echo "+ mypy ."
             mypy .
             echo "+ flake8 ."
             flake8 .
